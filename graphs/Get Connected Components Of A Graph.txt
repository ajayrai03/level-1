import java.io.*;
import java.util.*;

public class Main {
   static class Edge {
      int src;
      int nbr;
      int wt;

      Edge(int src, int nbr, int wt) {
         this.src = src;
         this.nbr = nbr;
         this.wt = wt;
      }
   }

   public static void main(String[] args) throws Exception {
      Scanner scn=new Scanner(System.in);

      int vtces = scn.nextInt();
      ArrayList<Edge>[] graph = new ArrayList[vtces];
      for (int i = 0; i < vtces; i++) {
         graph[i] = new ArrayList<>();
      }

      int edges = scn.nextInt();
      for (int i = 0; i < edges; i++) {
         int v1=scn.nextInt();
         int v2=scn.nextInt();
         int wt=scn.nextInt();
         graph[v1].add(new Edge(v1, v2, wt));
         graph[v2].add(new Edge(v2, v1, wt));
      }
      ArrayList<ArrayList<Integer>>comps=new ArrayList<>();
     boolean[] visited=new boolean[vtces];
     for(int i=0;i<vtces;i++){
         if(visited[i]==false){
             ArrayList<Integer> comp=new ArrayList<>();
             getComp(graph,i,visited,comp);
             comps.add(comp);
         }
     }
      
      // write your code here

      System.out.println(comps);
   }
   public static void getComp(ArrayList<Edge>[] graph,int src,boolean[] visited,ArrayList<Integer> comp){
       
       visited[src]=true;
       comp.add(src);
       for(Edge e:graph[src]){
           int nbr=e.nbr;
           if(visited[nbr]==false){
               getComp(graph,nbr,visited,comp);
           }
       }
       
}
}